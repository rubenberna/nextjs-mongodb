{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/rubenberna/code/Redcarrots/BossData/SEO_shell/pages/[...slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport Prices from '../components/Prices';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Welcome to BitzPrices\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Check current Bitcoin rate\"), __jsx(Prices, {\n    bpi: props.bpi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })));\n};\n/*\nEach Next.js page component allows us to fetch data server-side thanks to a function called getInitialProps. When this function is called, the initial page load is rendered server-side, which is great for SEO.\n*/\n\n\nIndex.getInitialProps = function _callee(_ref) {\n  var asPath, _res, res, data;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          asPath = _ref.asPath;\n\n          if (!(asPath !== '/favicon.ico')) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/content', asPath));\n\n        case 4:\n          _res = _context.sent;\n          console.log(_res);\n\n        case 6:\n          console.log(url);\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(fetch('https://api.coindesk.com/v1/bpi/currentprice.json'));\n\n        case 9:\n          res = _context.sent;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 12:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            bpi: data.bpi\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(Index);","map":{"version":3,"sources":["/home/rubenberna/code/Redcarrots/BossData/SEO_shell/pages/[...slug].js"],"names":["withRouter","fetch","Layout","Prices","Index","props","bpi","getInitialProps","asPath","res","console","log","url","json","data"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,KAAK,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD,CAVD;AAYA;;;;;AAIAF,KAAK,CAACG,eAAN,GAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAQC,UAAAA,MAAR,QAAQA,MAAR;;AAAA,gBAElBA,MAAM,KAAK,cAFO;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAGFP,KAAK,CAAC,mCAAD,EAAsCO,MAAtC,CAHH;;AAAA;AAGdC,UAAAA,IAHc;AAIpBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAJoB;AAMtBC,UAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AANsB;AAAA,2CAOJX,KAAK,CAAC,mDAAD,CAPD;;AAAA;AAOhBQ,UAAAA,GAPgB;AAAA;AAAA,2CAQHA,GAAG,CAACI,IAAJ,EARG;;AAAA;AAQhBC,UAAAA,IARgB;AAAA,2CASf;AACLR,YAAAA,GAAG,EAAEQ,IAAI,CAACR;AADL,WATe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAcA,eAAeN,UAAU,CAACI,KAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router'\nimport fetch from 'isomorphic-unfetch'\n\nimport Layout from '../components/Layout'\nimport Prices from '../components/Prices'\n\nconst Index = (props) => {\n  return (\n    <Layout>\n      <div>\n        <h1>Welcome to BitzPrices</h1>\n        <p>Check current Bitcoin rate</p>\n        <Prices bpi={props.bpi} />\n      </div>\n    </Layout>\n  )\n}\n\n/*\nEach Next.js page component allows us to fetch data server-side thanks to a function called getInitialProps. When this function is called, the initial page load is rendered server-side, which is great for SEO.\n*/\n\nIndex.getInitialProps = async ({asPath}) => {\n\n  if (asPath !== '/favicon.ico'){\n    const res = await fetch('http://localhost:3000/api/content', asPath)\n    console.log(res);\n  }\n  console.log(url);\n  const res = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json')\n  const data = await res.json()\n  return {\n    bpi: data.bpi\n  }\n}\n\nexport default withRouter(Index)\n"]},"metadata":{},"sourceType":"module"}