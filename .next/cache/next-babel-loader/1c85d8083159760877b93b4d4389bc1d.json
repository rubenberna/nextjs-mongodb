{"ast":null,"code":"const mongodb = require('mongodb');\n\nconst url = 'MONGODB_URL=mongodb+srv://redcarrots:mongoeasy@cluster0-tujv2.gcp.mongodb.net/test?retryWrites=true&w=majority';\nconst dbName = 'taskbooker_landing';\nconst colName = 'content';\n\nconst loadPageContent = async url => {\n  try {\n    const client = await mongodb.MongoClient.connect(url, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    });\n    const collection = client.db(dbName).collection(colName);\n    const data = await collection.find({\n      URL: url\n    }).toArray();\n    client.close();\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nmodule.exports = {\n  loadPageContent\n};","map":{"version":3,"sources":["/home/rubenberna/code/Redcarrots/BossData/SEO_shell/db/mongodb.js"],"names":["mongodb","require","url","dbName","colName","loadPageContent","client","MongoClient","connect","useNewUrlParser","useUnifiedTopology","collection","db","data","find","URL","toArray","close","e","console","log","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,GAAG,GAAG,gHAAZ;AACA,MAAMC,MAAM,GAAG,oBAAf;AACA,MAAMC,OAAO,GAAG,SAAhB;;AAEA,MAAMC,eAAe,GAAG,MAAOH,GAAP,IAAe;AACrC,MAAI;AACF,UAAMI,MAAM,GAAG,MAAMN,OAAO,CAACO,WAAR,CAAoBC,OAApB,CAA4BN,GAA5B,EAAiC;AAACO,MAAAA,eAAe,EAAE,IAAlB;AAAwBC,MAAAA,kBAAkB,EAAE;AAA5C,KAAjC,CAArB;AACA,UAAMC,UAAU,GAAGL,MAAM,CAACM,EAAP,CAAUT,MAAV,EAAkBQ,UAAlB,CAA6BP,OAA7B,CAAnB;AACA,UAAMS,IAAI,GAAG,MAAMF,UAAU,CAACG,IAAX,CAAgB;AAACC,MAAAA,GAAG,EAAEb;AAAN,KAAhB,EAA4Bc,OAA5B,EAAnB;AACAV,IAAAA,MAAM,CAACW,KAAP;AACA,WAAOJ,IAAP;AACD,GAND,CAME,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,CAVD;;AAYAG,MAAM,CAACC,OAAP,GAAiB;AACfjB,EAAAA;AADe,CAAjB","sourcesContent":["const mongodb = require('mongodb');\n\nconst url = 'MONGODB_URL=mongodb+srv://redcarrots:mongoeasy@cluster0-tujv2.gcp.mongodb.net/test?retryWrites=true&w=majority'\nconst dbName = 'taskbooker_landing'\nconst colName = 'content'\n\nconst loadPageContent = async (url) => {\n  try {\n    const client = await mongodb.MongoClient.connect(url, {useNewUrlParser: true, useUnifiedTopology: true})\n    const collection = client.db(dbName).collection(colName)\n    const data = await collection.find({URL: url}).toArray()\n    client.close()\n    return data\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nmodule.exports = {\n  loadPageContent\n}\n"]},"metadata":{},"sourceType":"script"}