{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/rubenberna/code/Redcarrots/BossData/SEO_shell/pages/[...slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport axios from 'axios';\nimport Layout from '../components/Layout';\nimport Headline from '../components/headline';\nimport SeoTable from '../components/table';\n\nvar Complex = function Complex(_ref) {\n  var data = _ref.data,\n      slug = _ref.slug;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(Headline, {\n    content: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), __jsx(SeoTable, {\n    content: data,\n    slug: slug,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n/*\nEach Next.js page component allows us to fetch data server-side thanks to a function called getInitialProps. When this function is called, the initial page load is rendered server-side, which is great for SEO.\n*/\n\n\nComplex.getInitialProps = function _callee(_ref2) {\n  var asPath, content, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          asPath = _ref2.asPath;\n\n          if (!(asPath !== '/favicon.ico')) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.post('http://localhost:3000/api/content', {\n            asPath: asPath\n          }));\n\n        case 4:\n          content = _context.sent;\n          data = content.data;\n          return _context.abrupt(\"return\", {\n            data: data[0]\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(Complex);","map":{"version":3,"sources":["/home/rubenberna/code/Redcarrots/BossData/SEO_shell/pages/[...slug].js"],"names":["withRouter","axios","Layout","Headline","SeoTable","Complex","data","slug","getInitialProps","asPath","post","content"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAkB;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAChC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAED,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEA,IAAnB;AAAyB,IAAA,IAAI,EAAEC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAPD;AASA;;;;;AAIAF,OAAO,CAACG,eAAR,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,UAAAA,MAAR,SAAQA,MAAR;;AAAA,gBACnBA,MAAM,KAAK,cADQ;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAEAR,KAAK,CAACS,IAAN,CAAW,mCAAX,EAAgD;AAACD,YAAAA,MAAM,EAANA;AAAD,WAAhD,CAFA;;AAAA;AAEhBE,UAAAA,OAFgB;AAGdL,UAAAA,IAHc,GAGLK,OAHK,CAGdL,IAHc;AAAA,2CAIf;AACLA,YAAAA,IAAI,EAAEA,IAAI,CAAC,CAAD;AADL,WAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAUA,eAAeN,UAAU,CAACK,OAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router'\nimport axios from 'axios'\n\nimport Layout from '../components/Layout'\nimport Headline from '../components/headline'\nimport SeoTable from '../components/table'\n\nconst Complex = ({data, slug}) => {\n  return (\n    <Layout>\n      <Headline content={data}/>\n      <SeoTable content={data} slug={slug}/>\n    </Layout>\n  )\n}\n\n/*\nEach Next.js page component allows us to fetch data server-side thanks to a function called getInitialProps. When this function is called, the initial page load is rendered server-side, which is great for SEO.\n*/\n\nComplex.getInitialProps = async ({asPath}) => {\n  if ( asPath !== '/favicon.ico' ) {\n    const content = await axios.post('http://localhost:3000/api/content', {asPath})\n    const { data } = content\n    return {\n      data: data[0]\n    }\n  }\n}\n\nexport default withRouter(Complex)\n"]},"metadata":{},"sourceType":"module"}