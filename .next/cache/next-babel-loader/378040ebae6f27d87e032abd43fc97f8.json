{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/rubenberna/code/Redcarrots/BossData/SEO_shell/pages/[...slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport Prices from '../components/Prices';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Welcome to BitzPrices\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Check current Bitcoin rate\"), __jsx(Prices, {\n    bpi: props.bpi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })));\n};\n\nIndex.getInitialProps = function _callee(context) {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (false) {\n            console.log(\"Server Side Router Query\", context.asPath);\n          } else {\n            console.log(\"Client side Router Query\", context.asPath);\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch('https://api.coindesk.com/v1/bpi/currentprice.json'));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            bpi: data.bpi\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(Index);","map":{"version":3,"sources":["/home/rubenberna/code/Redcarrots/BossData/SEO_shell/pages/[...slug].js"],"names":["withRouter","fetch","Layout","Prices","Index","props","bpi","getInitialProps","context","console","log","asPath","res","json","data"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,KAAK,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD,CAVD;;AAaAF,KAAK,CAACG,eAAN,GAAwB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB,qBAAmC;AACjCC,YAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,OAAO,CAACG,MAAhD;AACD,WAFD,MAEO;AACLF,YAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,OAAO,CAACG,MAAhD;AACD;;AALqB;AAAA,2CAMJV,KAAK,CAAC,mDAAD,CAND;;AAAA;AAMhBW,UAAAA,GANgB;AAAA;AAAA,2CAOHA,GAAG,CAACC,IAAJ,EAPG;;AAAA;AAOhBC,UAAAA,IAPgB;AAAA,2CAQf;AACLR,YAAAA,GAAG,EAAEQ,IAAI,CAACR;AADL,WARe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAaA,eAAeN,UAAU,CAACI,KAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router'\nimport fetch from 'isomorphic-unfetch'\nimport Layout from '../components/Layout'\nimport Prices from '../components/Prices'\n\nconst Index = (props) => {\n  return (\n    <Layout>\n      <div>\n        <h1>Welcome to BitzPrices</h1>\n        <p>Check current Bitcoin rate</p>\n        <Prices bpi={props.bpi} />\n      </div>\n    </Layout>\n  )\n}\n\n\nIndex.getInitialProps = async (context) => {\n  if (typeof window === \"undefined\") {\n    console.log(\"Server Side Router Query\", context.asPath);\n  } else {\n    console.log(\"Client side Router Query\", context.asPath);\n  }\n  const res = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json')\n  const data = await res.json()\n  return {\n    bpi: data.bpi\n  }\n}\n\nexport default withRouter(Index)\n"]},"metadata":{},"sourceType":"module"}