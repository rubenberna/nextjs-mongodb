{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/rubenberna/code/Redcarrots/BossData/SEO_shell/components/table/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\n\nvar SeoTable = function SeoTable(_ref) {\n  var content = _ref.content,\n      slug = _ref.slug;\n  console.log(slug);\n\n  var renderTable = function renderTable() {\n    return __jsx(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, __jsx(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"#\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"URL\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"1st Category\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"City\"))));\n  };\n\n  var renderTableBody = function renderTableBody() {};\n\n  return renderTable();\n};\n\nSeoTable.getInitialProps = function _callee(props) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('fuck'); // const content = await axios.get('http://localhost:3000/api/content')\n\n          return _context.abrupt(\"return\", {\n            data: 'Hi'\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default SeoTable;","map":{"version":3,"sources":["/home/rubenberna/code/Redcarrots/BossData/SEO_shell/components/table/index.js"],"names":["axios","Table","SeoTable","content","slug","console","log","renderTable","renderTableBody","getInitialProps","props","data"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAqB;AAAA,MAAnBC,OAAmB,QAAnBA,OAAmB;AAAA,MAAVC,IAAU,QAAVA,IAAU;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,MAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,WACE,MAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,CADF,CADF;AAYD,GAbD;;AAeA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM,CAE7B,CAFD;;AAIA,SAAOD,WAAW,EAAlB;AACD,CAvBD;;AAyBAL,QAAQ,CAACO,eAAT,GAA2B,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AACzBL,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADyB,CAEzB;;AAFyB,2CAGlB;AACLK,YAAAA,IAAI,EAAE;AADD,WAHkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAQA,eAAeT,QAAf","sourcesContent":["import axios from 'axios'\nimport { Table } from 'react-bootstrap'\n\nconst SeoTable = ({content, slug}) => {\n  console.log(slug);\n\n  const renderTable = () => {\n    return (\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>URL</th>\n            <th>1st Category</th>\n            <th>City</th>\n          </tr>\n        </thead>\n      </Table>\n    )\n  }\n\n  const renderTableBody = () => {\n\n  }\n\n  return renderTable()\n}\n\nSeoTable.getInitialProps = async (props) => {\n  console.log('fuck');\n  // const content = await axios.get('http://localhost:3000/api/content')\n  return {\n    data: 'Hi'\n  }\n}\n\nexport default SeoTable\n"]},"metadata":{},"sourceType":"module"}