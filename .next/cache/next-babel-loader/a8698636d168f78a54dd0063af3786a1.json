{"ast":null,"code":"var _jsxFileName = \"/home/rubenberna/code/Training/Next.js/Traversy/components/Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass Prices extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currency: 'EUR'\n    });\n  }\n\n  render() {\n    const {\n      bpi\n    } = this.props;\n    const {\n      currency\n    } = this.state;\n    let list;\n\n    if (currency === 'USD') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Bitcoin rate from \", bpi.USD.description, \":\", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, bpi.USD.code), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, bpi.USD.rate));\n    } else if (currency === 'GBP') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Bitcoin rate from \", bpi.GBP.description, \":\", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, bpi.GBP.code), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, bpi.GBP.rate));\n    } else if (currency === 'EUR') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Bitcoin rate from \", bpi.EUR.description, \":\", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, bpi.EUR.code), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, bpi.EUR.rate));\n    }\n\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, list), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), __jsx(\"select\", {\n      onChange: e => this.setState({\n        currency: e.target.value\n      }),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      value: \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"USD\"), __jsx(\"option\", {\n      value: \"GBP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"GBP\"), __jsx(\"option\", {\n      value: \"EUR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"EUR\")));\n  }\n\n}\n\nexport default Prices;","map":{"version":3,"sources":["/home/rubenberna/code/Training/Next.js/Traversy/components/Prices.js"],"names":["Prices","React","Component","currency","render","bpi","props","state","list","USD","description","code","rate","GBP","EUR","e","setState","target","value"],"mappings":";;;;;;AAAA,MAAMA,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCAC3B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD2B;AAAA;;AAKnCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAQ,KAAKC,KAAnB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAe,KAAKI,KAA1B;AACA,QAAIC,IAAJ;;AACA,QAAGL,QAAQ,KAAK,KAAhB,EAAuB;AACrBK,MAAAA,IAAI,GAAG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACcH,GAAG,CAACI,GAAJ,CAAQC,WADtB,OAEL;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,GAAG,CAACI,GAAJ,CAAQE,IADX,CAFK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASN,GAAG,CAACI,GAAJ,CAAQG,IAAjB,CALK,CAAP;AAOD,KARD,MAQO,IAAIT,QAAQ,KAAK,KAAjB,EAAwB;AAC7BK,MAAAA,IAAI,GAAG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACcH,GAAG,CAACQ,GAAJ,CAAQH,WADtB,OAEL;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,GAAG,CAACQ,GAAJ,CAAQF,IADX,CAFK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASN,GAAG,CAACQ,GAAJ,CAAQD,IAAjB,CALK,CAAP;AAOD,KARM,MAQA,IAAIT,QAAQ,KAAK,KAAjB,EAAwB;AAC7BK,MAAAA,IAAI,GAAG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACcH,GAAG,CAACS,GAAJ,CAAQJ,WADtB,OAEL;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,GAAG,CAACS,GAAJ,CAAQH,IADX,CAFK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASN,GAAG,CAACS,GAAJ,CAAQF,IAAjB,CALK,CAAP;AAOD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,IADH,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAQ,MAAA,QAAQ,EAAGO,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEb,QAAAA,QAAQ,EAAEY,CAAC,CAACE,MAAF,CAASC;AAArB,OAAd,CAAxB;AAAqE,MAAA,SAAS,EAAC,cAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CALF,CADF;AAaD;;AAhDkC;;AAmDrC,eAAelB,MAAf","sourcesContent":["class Prices extends React.Component {\n  state = {\n    currency: 'EUR'\n  }\n\n  render() {\n    const {bpi} = this.props\n    const { currency } = this.state\n    let list;\n    if(currency === 'USD') {\n      list = <li className='list-group-item'>\n        Bitcoin rate from {bpi.USD.description}:\n        <span className='badge badge-primary'>\n          {bpi.USD.code}\n        </span>\n        <strong>{bpi.USD.rate}</strong>\n      </li>\n    } else if (currency === 'GBP') {\n      list = <li className='list-group-item'>\n        Bitcoin rate from {bpi.GBP.description}:\n        <span className='badge badge-primary'>\n          {bpi.GBP.code}\n        </span>\n        <strong>{bpi.GBP.rate}</strong>\n      </li>\n    } else if (currency === 'EUR') {\n      list = <li className='list-group-item'>\n        Bitcoin rate from {bpi.EUR.description}:\n        <span className='badge badge-primary'>\n          {bpi.EUR.code}\n        </span>\n        <strong>{bpi.EUR.rate}</strong>\n      </li>\n    }\n\n    return (\n      <div>\n        <ul className='list-group'>\n          {list}\n        </ul>\n        <br/>\n        <select onChange={ e => this.setState({ currency: e.target.value}) } className='form-control'>\n          <option value='USD'>USD</option>\n          <option value='GBP'>GBP</option>\n          <option value='EUR'>EUR</option>\n        </select>\n      </div>\n    )\n  }\n}\n\nexport default Prices\n"]},"metadata":{},"sourceType":"module"}