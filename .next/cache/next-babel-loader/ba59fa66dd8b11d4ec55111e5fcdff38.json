{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/rubenberna/code/Redcarrots/BossData/SEO_shell/components/table/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\n\nvar SeoTable = function SeoTable(_ref) {\n  var slug = _ref.slug;\n\n  // useEffect(() => fetchTableContent(slug), [slug])\n  var _useState = useState([]),\n      tableList = _useState[0],\n      setTableList = _useState[1];\n\n  useEffect(function () {\n    var params = slug.split('/');\n    var category = params[1];\n\n    function fetchTableContent(slug) {\n      var tableContent, data, filteredList, shortList;\n      return _regeneratorRuntime.async(function fetchTableContent$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get('http://localhost:3000/api/content'));\n\n            case 2:\n              tableContent = _context.sent;\n              data = tableContent.data;\n              filteredList = data.filter(function (t) {\n                return t.Breadcrumb1 === category;\n              });\n              shortList = filteredList.splice(0, 200).sort();\n              setTableList(shortList);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    fetchTableContent(slug), [slug];\n  });\n\n  var renderTable = function renderTable() {\n    return __jsx(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"#\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"URL\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"1st Category\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"City\"))), renderTableBody());\n  };\n\n  var renderLastCategory = function renderLastCategory(item) {\n    var lastCategory = item.Breadcrumb3category ? item.Breadcrumb3category : item.Breadcrumb2category ? item.Breadcrumb2category : item.Breadcrumb1category;\n    var proper = lastCategory.replace(/-/g, \" \").charAt(0).toUpperCase() + lastCategory.replace(/-/g, \" \").slice(1);\n    return proper;\n  };\n\n  var renderTableBody = function renderTableBody() {\n    return tableList.map(function (t, i) {\n      return __jsx(\"tbody\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, i), __jsx(Link, {\n        href: \"/\".concat(slug),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, t.URL)), __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, renderLastCategory(t)), __jsx(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, t.CityPostalcode)));\n    });\n  };\n\n  return renderTable();\n};\n\nexport default SeoTable;","map":{"version":3,"sources":["/home/rubenberna/code/Redcarrots/BossData/SEO_shell/components/table/index.js"],"names":["React","useState","useEffect","Link","axios","Table","SeoTable","slug","tableList","setTableList","params","split","category","fetchTableContent","get","tableContent","data","filteredList","filter","t","Breadcrumb1","shortList","splice","sort","renderTable","renderTableBody","renderLastCategory","item","lastCategory","Breadcrumb3category","Breadcrumb2category","Breadcrumb1category","proper","replace","charAt","toUpperCase","slice","map","i","URL","CityPostalcode"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Link from 'next/link'\nimport axios from 'axios'\nimport { Table } from 'react-bootstrap'\n\nconst SeoTable = ({slug}) => {\n  // useEffect(() => fetchTableContent(slug), [slug])\n  const [tableList, setTableList] = useState([])\n\n  useEffect(() => {\n    const params = slug.split('/')\n    const category = params[1]\n    async function fetchTableContent(slug) {\n      const tableContent = await axios.get('http://localhost:3000/api/content')\n      const { data } = tableContent\n      const filteredList = data.filter(t => t.Breadcrumb1 === category)\n      const shortList = filteredList.splice(0, 200).sort()\n      setTableList(shortList)\n    }\n    fetchTableContent(slug), [slug]\n  })\n\n  const renderTable = () => {\n    return (\n      <Table striped bordered hover responsive>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>URL</th>\n            <th>1st Category</th>\n            <th>City</th>\n          </tr>\n        </thead>\n        { renderTableBody() }\n      </Table>\n    )\n  }\n\n  const renderLastCategory = (item) => {\n    let lastCategory = item.Breadcrumb3category ? item.Breadcrumb3category : (item.Breadcrumb2category ? item.Breadcrumb2category : item.Breadcrumb1category)\n\n    let proper = lastCategory.replace(/-/g, \" \")\n      .charAt(0)\n      .toUpperCase() +\n      lastCategory.replace(/-/g, \" \").slice(1)\n    return proper\n  }\n\n  const renderTableBody = () => {\n    return tableList.map((t, i) => {\n      return (\n        <tbody key={i}>\n          <tr>\n            <th>{i}</th>\n            <Link href={`/${slug}`}><th>{t.URL}</th></Link>\n            <th>{renderLastCategory(t)}</th>\n            <th>{t.CityPostalcode}</th>\n          </tr>\n        </tbody>\n      )}\n    )\n  }\n\n  return renderTable()\n}\n\nexport default SeoTable\n"]},"metadata":{},"sourceType":"module"}