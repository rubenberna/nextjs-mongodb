{"ast":null,"code":"var _jsxFileName = \"/home/rubenberna/code/Redcarrots/BossData/SEO_shell/pages/[...slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport axios from 'axios';\nimport Layout from '../components/Layout';\nimport Headline from '../components/headline';\nimport SeoTable from '../components/table';\n\nconst Complex = ({\n  data,\n  slug\n}) => {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(Headline, {\n    content: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), __jsx(SeoTable, {\n    content: data,\n    slug: slug,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n/*\nEach Next.js page component allows us to fetch data server-side thanks to a function called getInitialProps. When this function is called, the initial page load is rendered server-side, which is great for SEO.\n*/\n\n\nComplex.getInitialProps = async ({\n  asPath\n}) => {\n  if (asPath !== '/favicon.ico') {\n    const content = await axios.post('http://localhost:3000/api/content', {\n      asPath\n    });\n    const {\n      data\n    } = content;\n    return {\n      data: data[0],\n      slug: asPath\n    };\n  }\n};\n\nexport default withRouter(Complex);","map":{"version":3,"sources":["/home/rubenberna/code/Redcarrots/BossData/SEO_shell/pages/[...slug].js"],"names":["withRouter","axios","Layout","Headline","SeoTable","Complex","data","slug","getInitialProps","asPath","content","post"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAkB;AAChC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAED,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEA,IAAnB;AAAyB,IAAA,IAAI,EAAEC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAPD;AASA;;;;;AAIAF,OAAO,CAACG,eAAR,GAA0B,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAoB;AAC5C,MAAKA,MAAM,KAAK,cAAhB,EAAiC;AAC/B,UAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,mCAAX,EAAgD;AAACF,MAAAA;AAAD,KAAhD,CAAtB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAWI,OAAjB;AACA,WAAO;AACLJ,MAAAA,IAAI,EAAEA,IAAI,CAAC,CAAD,CADL;AAELC,MAAAA,IAAI,EAAEE;AAFD,KAAP;AAID;AACF,CATD;;AAWA,eAAeT,UAAU,CAACK,OAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router'\nimport axios from 'axios'\n\nimport Layout from '../components/Layout'\nimport Headline from '../components/headline'\nimport SeoTable from '../components/table'\n\nconst Complex = ({data, slug}) => {\n  return (\n    <Layout>\n      <Headline content={data}/>\n      <SeoTable content={data} slug={slug}/>\n    </Layout>\n  )\n}\n\n/*\nEach Next.js page component allows us to fetch data server-side thanks to a function called getInitialProps. When this function is called, the initial page load is rendered server-side, which is great for SEO.\n*/\n\nComplex.getInitialProps = async ({asPath}) => {\n  if ( asPath !== '/favicon.ico' ) {\n    const content = await axios.post('http://localhost:3000/api/content', {asPath})\n    const { data } = content\n    return {\n      data: data[0],\n      slug: asPath\n    }\n  }\n}\n\nexport default withRouter(Complex)\n"]},"metadata":{},"sourceType":"module"}