{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/rubenberna/code/Redcarrots/BossData/SEO_shell/pages/[...slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport Prices from '../components/Prices';\n\nvar Complex = function Complex(_ref) {\n  var data = _ref.data;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, data.Headline)));\n};\n/*\nEach Next.js page component allows us to fetch data server-side thanks to a function called getInitialProps. When this function is called, the initial page load is rendered server-side, which is great for SEO.\n*/\n\n\nComplex.getInitialProps = function _callee(_ref2) {\n  var asPath, res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          asPath = _ref2.asPath;\n\n          if (!(asPath !== '/favicon.ico')) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/content'));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: json\n          });\n\n        case 11:\n          return _context.abrupt(\"return\");\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(Complex);","map":{"version":3,"sources":["/home/rubenberna/code/Redcarrots/BossData/SEO_shell/pages/[...slug].js"],"names":["withRouter","fetch","Layout","Prices","Complex","data","Headline","getInitialProps","asPath","res","json"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAC1B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,QAAV,CADF,CADF,CADF;AAOD,CARD;AAUA;;;;;AAIAF,OAAO,CAACG,eAAR,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,UAAAA,MAAR,SAAQA,MAAR;;AAAA,gBAGlBA,MAAM,KAAK,cAHO;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAIFP,KAAK,CAAC,mCAAD,CAJH;;AAAA;AAIdQ,UAAAA,GAJc;AAAA;AAAA,2CAKDA,GAAG,CAACC,IAAJ,EALC;;AAAA;AAKdA,UAAAA,IALc;AAAA,2CAMb;AAAEL,YAAAA,IAAI,EAAEK;AAAR,WANa;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAWA,eAAeV,UAAU,CAACI,OAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router'\nimport fetch from 'isomorphic-unfetch'\n\nimport Layout from '../components/Layout'\nimport Prices from '../components/Prices'\n\nconst Complex = ({data}) => {\n  return (\n    <Layout>\n      <div>\n        <h2>{data.Headline}</h2>\n      </div>\n    </Layout>\n  )\n}\n\n/*\nEach Next.js page component allows us to fetch data server-side thanks to a function called getInitialProps. When this function is called, the initial page load is rendered server-side, which is great for SEO.\n*/\n\nComplex.getInitialProps = async ({asPath}) => {\n    // const url = asPath !== '/favicon.ico'\n    // console.log(url);\n    if (asPath !== '/favicon.ico') {\n      const res = await fetch('http://localhost:3000/api/content')\n      const json = await res.json()\n      return { data: json }\n    }\n    else return\n}\n\nexport default withRouter(Complex)\n"]},"metadata":{},"sourceType":"module"}