{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/rubenberna/code/Training/Next.js/Traversy/components/Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Prices =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  function Prices() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Prices)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'EUR'\n    });\n\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    value: function render() {\n      var bpi = this.props.bpi;\n      var currency = this.state.currency;\n      var list;\n\n      if (currency === 'USD') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, \"Bitcoin rate from \", bpi.USD.description, \":\", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, bpi.USD.code), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, bpi.USD.rate));\n      } else if (currency === 'GBP') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Bitcoin rate from \", bpi.GBP.description, \":\", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, bpi.GBP.code), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, bpi.GBP.rate));\n      } else if (currency === 'EUR') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Bitcoin rate from \", bpi.EUR.description, \":\", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, bpi.EUR.code), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, bpi.EUR.rate));\n      }\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, list));\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":{"version":3,"sources":["/home/rubenberna/code/Training/Next.js/Traversy/components/Prices.js"],"names":["Prices","currency","bpi","props","state","list","USD","description","code","rate","GBP","EUR","React","Component"],"mappings":";;;;;;;;;;;IAAMA,M;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;;;;;;6BAIC;AAAA,UACAC,GADA,GACO,KAAKC,KADZ,CACAD,GADA;AAAA,UAECD,QAFD,GAEc,KAAKG,KAFnB,CAECH,QAFD;AAGP,UAAII,IAAJ;;AACA,UAAGJ,QAAQ,KAAK,KAAhB,EAAuB;AACrBI,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACcH,GAAG,CAACI,GAAJ,CAAQC,WADtB,OAEL;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGL,GAAG,CAACI,GAAJ,CAAQE,IADX,CAFK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASN,GAAG,CAACI,GAAJ,CAAQG,IAAjB,CALK,CAAP;AAOD,OARD,MAQO,IAAIR,QAAQ,KAAK,KAAjB,EAAwB;AAC7BI,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACcH,GAAG,CAACQ,GAAJ,CAAQH,WADtB,OAEL;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGL,GAAG,CAACQ,GAAJ,CAAQF,IADX,CAFK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASN,GAAG,CAACQ,GAAJ,CAAQD,IAAjB,CALK,CAAP;AAOD,OARM,MAQA,IAAIR,QAAQ,KAAK,KAAjB,EAAwB;AAC7BI,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACcH,GAAG,CAACS,GAAJ,CAAQJ,WADtB,OAEL;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGL,GAAG,CAACS,GAAJ,CAAQH,IADX,CAFK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASN,GAAG,CAACS,GAAJ,CAAQF,IAAjB,CALK,CAAP;AAOD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,IADH,CADF,CADF;AAOD;;;;EA1CkBO,KAAK,CAACC,S;;AA6C3B,eAAeb,MAAf","sourcesContent":["class Prices extends React.Component {\n  state = {\n    currency: 'EUR'\n  }\n\n  render() {\n    const {bpi} = this.props\n    const { currency } = this.state\n    let list;\n    if(currency === 'USD') {\n      list = <li className='list-group-item'>\n        Bitcoin rate from {bpi.USD.description}:\n        <span className='badge badge-primary'>\n          {bpi.USD.code}\n        </span>\n        <strong>{bpi.USD.rate}</strong>\n      </li>\n    } else if (currency === 'GBP') {\n      list = <li className='list-group-item'>\n        Bitcoin rate from {bpi.GBP.description}:\n        <span className='badge badge-primary'>\n          {bpi.GBP.code}\n        </span>\n        <strong>{bpi.GBP.rate}</strong>\n      </li>\n    } else if (currency === 'EUR') {\n      list = <li className='list-group-item'>\n        Bitcoin rate from {bpi.EUR.description}:\n        <span className='badge badge-primary'>\n          {bpi.EUR.code}\n        </span>\n        <strong>{bpi.EUR.rate}</strong>\n      </li>\n    }\n\n    return (\n      <div>\n        <ul className='list-group'>\n          {list}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Prices\n"]},"metadata":{},"sourceType":"module"}